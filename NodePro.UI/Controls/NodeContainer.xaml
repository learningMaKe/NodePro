<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:NodePro.Core.Converters;assembly=NodePro.Core"
    xmlns:core="clr-namespace:NodePro.Core.Node;assembly=NodePro.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:model="clr-namespace:NodePro.Core.Model;assembly=NodePro.Core"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/NodePro.UI;component/Brushes.xaml" />
        <ResourceDictionary Source="/NodePro.UI;component/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <convert:Divide2Converter x:Key="Divide2Converter" />
    <convert:InverseDivide2Converter x:Key="InverseDivide2Converter" />
    <core:NodeTemplateSelector x:Key="NodeTemplate" />

    <DataTemplate x:Key="DefaultNodeElementTemplateStyle" DataType="{x:Type model:NodeElement}">
        <TextBox />
    </DataTemplate>

    <DataTemplate x:Key="DefaultNodeElementHolder" DataType="{x:Type model:NodeElementGroup}">
        <ItemsControl Background="Transparent" ItemsSource="{Binding}">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type model:NodeElement}">
                    <Grid Margin="{StaticResource BottomAwayThickness}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="8*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <core:NodeConnector
                            x:Name="LeftConnector"
                            Grid.Column="0"
                            Margin="{StaticResource RightAwayThickness}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ConnectorType="Input"
                            NodeParent="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Connect">
                                    <i:InvokeCommandAction Command="{x:Static core:NodeContainer.InputConnectCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <core:NodeConnector.RenderTransform>
                                <TranslateTransform X="{Binding ElementName=LeftConnector, Path=ActualWidth, Converter={StaticResource InverseDivide2Converter}}" />
                            </core:NodeConnector.RenderTransform>
                        </core:NodeConnector>

                        <ContentControl
                            Grid.Column="1"
                            Content="{Binding}"
                            ContentTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}, Path=ElementSelector}"
                            DataContext="{Binding}" />
                        <core:NodeConnector
                            x:Name="RightConnector"
                            Grid.Column="2"
                            Margin="{StaticResource LeftAwayThickness}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            ConnectorType="Output"
                            NodeParent="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}}">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Connect">
                                    <i:InvokeCommandAction Command="{x:Static core:NodeContainer.OutputConnectCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <core:NodeConnector.RenderTransform>
                                <TranslateTransform X="{Binding ElementName=RightConnector, Path=ActualWidth, Converter={StaticResource Divide2Converter}}" />
                            </core:NodeConnector.RenderTransform>
                        </core:NodeConnector>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <ControlTemplate x:Key="DefaultNodeContainerTemplate" TargetType="{x:Type core:NodeContainer}">
        <Border
            x:Name="MainContainer"
            MinWidth="{TemplateBinding MinWidth}"
            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
            VerticalAlignment="{TemplateBinding VerticalAlignment}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{StaticResource DefaultCornerRadius}"
            Focusable="{TemplateBinding Focusable}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}, Path=HeaderClickedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Border.Effect>
                <DropShadowEffect Opacity="0.2" Color="Black" />
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--  Header  -->

                <Border Background="{TemplateBinding HeaderBackground}" CornerRadius="{DynamicResource TopRoundRadius}">

                    <Grid>

                        <Thumb
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            core:NodeHelper.Container="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}}"
                            Background="Transparent"
                            Foreground="{TemplateBinding Foreground}"
                            Tag="{TemplateBinding Header}">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragDelta">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=core:NodeContainer}, Path=MoveCommand}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Rectangle Fill="{TemplateBinding Background}" />
                                        <ContentPresenter
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding Tag}"
                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                </Border>
                <Border
                    Grid.Row="1"
                    MinHeight="{TemplateBinding MinHeight}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{DynamicResource BottomRoundRadius}">
                    <ContentPresenter
                        Margin="{StaticResource TopAwayThickness}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{TemplateBinding Elements}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        TextElement.Foreground="{TemplateBinding Foreground}" />
                </Border>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="MainContainer" Property="Effect" Value="{x:Null}" />
                <Setter TargetName="MainContainer" Property="BorderBrush" Value="White" />
                <Setter Property="ZIndex" Value="999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultNodeContainer" TargetType="{x:Type core:NodeContainer}">
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="MinHeight" Value="250" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Canvas.Left" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Position.X}" />
        <Setter Property="Canvas.Top" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Position.Y}" />
        <Setter Property="Foreground" Value="{DynamicResource TextPrimaryBrush}" />
        <Setter Property="Background" Value="{DynamicResource NodeBackgroundBrush}" />
        <Setter Property="HeaderBackground" Value="{DynamicResource NodePrimaryBrush}" />
        <Setter Property="Padding" Value="{StaticResource AllAwayThickness}" />
        <Setter Property="Template" Value="{StaticResource DefaultNodeContainerTemplate}" />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultNodeElementHolder}" />
    </Style>
</ResourceDictionary>